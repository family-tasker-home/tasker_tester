// ===== DAILY SCHEDULE LOGIC =====

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Ä–æ–∑–ø–æ—Ä—è–¥–∫—ñ–≤ –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
if (typeof window.dailyScheduleState === 'undefined') {
    window.dailyScheduleState = {};
}

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è HTML —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ —Å–µ–∫—Ü—ñ—ó
window.createDailySection = function() {
    const section = document.getElementById('daily-section');
    
    const currentUser = window.currentUser ? window.currentUser() : null;
    if (!currentUser) {
        section.innerHTML = `
            <div class="container">
                <div class="header">
                    <h1>üìÖ –†–æ–∑–ø–æ—Ä—è–¥–æ–∫ –¥–Ω—è</h1>
                    <p>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–∏–π</p>
                </div>
            </div>
        `;
        return;
    }
    
    section.innerHTML = `
        <div class="container">
            <div class="header">
                <h1>üìÖ –†–æ–∑–ø–æ—Ä—è–¥–æ–∫ –¥–Ω—è</h1>
                <p>–ü—Ä–æ—Ñ—ñ–ª—å: <strong>${currentUser.avatar} ${currentUser.name}</strong></p>
                <p style="color: #4CAF50; font-size: 0.9em; margin-top: 10px;">üíæ –í—Å—ñ –∑–º—ñ–Ω–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –≤ –±–∞–∑—É</p>
                <p style="color: #d0d0d0; font-size: 0.85em; margin-top: 5px; opacity: 0.8;">–¶–µ –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏–π —Ä–æ–∑–ø–æ—Ä—è–¥–æ–∫ - —Ç—ñ–ª—å–∫–∏ –≤–∏ –π–æ–≥–æ –±–∞—á–∏—Ç–µ</p>
            </div>
            
            <div class="content">
                <div class="add-task">
                    <input type="time" id="dailyTimeInput" placeholder="–ì–æ–¥–∏–Ω–∞">
                    <input type="text" id="dailyTaskInput" placeholder="–í–≤–µ–¥—ñ—Ç—å –∑–∞–≤–¥–∞–Ω–Ω—è...">
                    <button onclick="window.addDailyTask()">‚ûï –î–æ–¥–∞—Ç–∏</button>
                </div>

                <div id="dailyScheduleList" class="schedule-list">
                    <div class="empty-state">
                        <svg viewBox="0 0 24 24" fill="currentColor">
                            <path d="M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z"/>
                        </svg>
                        <p>–ü–æ—á–Ω—ñ—Ç—å –¥–æ–¥–∞–≤–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è –¥–æ –≤–∞—à–æ–≥–æ —Ä–æ–∑–ø–æ—Ä—è–¥–∫—É –¥–Ω—è</p>
                    </div>
                </div>
            </div>
        </div>
    `;
    
    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ Enter –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥—É
    const taskInput = document.getElementById('dailyTaskInput');
    if (taskInput) {
        taskInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                window.addDailyTask();
            }
        });
    }
};

// –û—Ç—Ä–∏–º–∞—Ç–∏ —Ä–æ–∑–ø–æ—Ä—è–¥–æ–∫ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
function getUserSchedule() {
    const currentUser = window.currentUser ? window.currentUser() : null;
    if (!currentUser) return [];
    
    const username = currentUser.username;
    if (!window.dailyScheduleState[username]) {
        window.dailyScheduleState[username] = [];
    }
    
    return window.dailyScheduleState[username];
}

// –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–µ –∑–∞–≤–¥–∞–Ω–Ω—è
window.addDailyTask = function() {
    const currentUser = window.currentUser ? window.currentUser() : null;
    if (!currentUser) {
        alert('‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–∏–π!');
        return;
    }
    
    const timeInput = document.getElementById('dailyTimeInput');
    const taskInput = document.getElementById('dailyTaskInput');
    
    if (!timeInput || !taskInput) return;
    
    const time = timeInput.value;
    const task = taskInput.value.trim();

    if (!time || !task) {
        alert('–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –ø–æ–ª—è!');
        return;
    }

    const username = currentUser.username;
    if (!window.dailyScheduleState[username]) {
        window.dailyScheduleState[username] = [];
    }
    
    // –î–æ–¥–∞—î–º–æ –∑–∞–≤–¥–∞–Ω–Ω—è
    window.dailyScheduleState[username].push({ time, task });
    
    // –°–æ—Ä—Ç—É—î–º–æ –∑–∞ —á–∞—Å–æ–º
    window.dailyScheduleState[username].sort((a, b) => a.time.localeCompare(b.time));

    // –û—á–∏—â–∞—î–º–æ –ø–æ–ª—è –≤–≤–æ–¥—É
    timeInput.value = '';
    taskInput.value = '';
    
    // –†–µ–Ω–¥–µ—Ä–∏–º–æ —Å–ø–∏—Å–æ–∫
    window.renderDailySchedule();
    
    console.log(`‚úÖ –î–æ–¥–∞–Ω–æ –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è ${username}:`, { time, task });
    console.log('üìä –ü–æ—Ç–æ—á–Ω–∏–π —Ä–æ–∑–ø–æ—Ä—è–¥–æ–∫:', window.dailyScheduleState[username]);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ Firebase (—Ç—ñ–ª—å–∫–∏ —Ä–æ–∑–ø–æ—Ä—è–¥–∫—É —Ü—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞)
    if (typeof window.autoSaveDailySchedule === 'function') {
        window.autoSaveDailySchedule();
    }
    
    // –î–æ–¥–∞—Ç–∫–æ–≤–æ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ –ª–æ–∫–∞–ª—å–Ω–∏–π –∫–µ—à
    if (typeof window.autoSaveToCache === 'function') {
        window.autoSaveToCache();
    }
};

// –í–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è
window.deleteDailyTask = function(index) {
    const currentUser = window.currentUser ? window.currentUser() : null;
    if (!currentUser) {
        alert('‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–∏–π!');
        return;
    }
    
    const username = currentUser.username;
    if (!window.dailyScheduleState[username]) return;
    
    // –í–∏–¥–∞–ª—è—î–º–æ –∑–∞–≤–¥–∞–Ω–Ω—è
    const deletedTask = window.dailyScheduleState[username][index];
    window.dailyScheduleState[username].splice(index, 1);
    
    // –†–µ–Ω–¥–µ—Ä–∏–º–æ —Å–ø–∏—Å–æ–∫
    window.renderDailySchedule();
    
    console.log(`üóëÔ∏è –í–∏–¥–∞–ª–µ–Ω–æ –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è ${username}:`, deletedTask);
    console.log('üìä –ü–æ—Ç–æ—á–Ω–∏–π —Ä–æ–∑–ø–æ—Ä—è–¥–æ–∫:', window.dailyScheduleState[username]);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ Firebase
    if (typeof window.autoSaveDailySchedule === 'function') {
        window.autoSaveDailySchedule();
    }
    
    // –î–æ–¥–∞—Ç–∫–æ–≤–æ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ –ª–æ–∫–∞–ª—å–Ω–∏–π –∫–µ—à
    if (typeof window.autoSaveToCache === 'function') {
        window.autoSaveToCache();
    }
};

// –†–µ–Ω–¥–µ—Ä —Å–ø–∏—Å–∫—É –∑–∞–≤–¥–∞–Ω—å
window.renderDailySchedule = function() {
    const list = document.getElementById('dailyScheduleList');
    
    if (!list) return;
    
    const currentUser = window.currentUser ? window.currentUser() : null;
    if (!currentUser) {
        list.innerHTML = `
            <div class="empty-state">
                <p>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–∏–π</p>
            </div>
        `;
        return;
    }
    
    const schedule = getUserSchedule();
    
    if (!schedule || schedule.length === 0) {
        list.innerHTML = `
            <div class="empty-state">
                <svg viewBox="0 0 24 24" fill="currentColor">
                    <path d="M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z"/>
                </svg>
                <p>–ü–æ—á–Ω—ñ—Ç—å –¥–æ–¥–∞–≤–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è –¥–æ –≤–∞—à–æ–≥–æ —Ä–æ–∑–ø–æ—Ä—è–¥–∫—É –¥–Ω—è</p>
                <p style="font-size: 0.9em; color: #888; margin-top: 10px;">–¶–µ –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏–π —Ä–æ–∑–ø–æ—Ä—è–¥–æ–∫ - —Ç—ñ–ª—å–∫–∏ –≤–∏ –º–æ–∂–µ—Ç–µ –π–æ–≥–æ –±–∞—á–∏—Ç–∏ —Ç–∞ —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏</p>
            </div>
        `;
        return;
    }

    list.innerHTML = schedule.map((item, index) => `
        <div class="schedule-item">
            <div class="schedule-time">${item.time}</div>
            <div class="schedule-task">${item.task}</div>
            <button class="delete-btn" onclick="window.deleteDailyTask(${index})">üóëÔ∏è</button>
        </div>
    `).join('');
    
    console.log(`üìã –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–æ ${schedule.length} –∑–∞–≤–¥–∞–Ω—å –¥–ª—è ${currentUser.username}`);
};

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–∫–∞–∑—É —Å—Ç–∞—Ç—É—Å—É –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
window.showSaveStatus = function(message, type = 'success') {
    // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    const existingStatus = document.querySelector('.save-status');
    if (existingStatus) {
        existingStatus.remove();
    }
    
    const statusDiv = document.createElement('div');
    statusDiv.className = `save-status ${type}`;
    statusDiv.textContent = message;
    
    document.body.appendChild(statusDiv);
    
    setTimeout(() => {
        statusDiv.style.animation = 'slideOutToRight 0.3s ease';
        setTimeout(() => statusDiv.remove(), 300);
    }, 2000);
};

// –ï–∫—Å–ø–æ—Ä—Ç –¥–ª—è Firebase (–ø–æ–≤–µ—Ä—Ç–∞—î —Ä–æ–∑–ø–æ—Ä—è–¥–æ–∫ –¢–Ü–õ–¨–ö–ò –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞)
window.getDailyScheduleForSave = function() {
    const currentUser = window.currentUser ? window.currentUser() : null;
    if (!currentUser) return [];
    
    const username = currentUser.username;
    return window.dailyScheduleState[username] || [];
};

// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–æ–∑–ø–æ—Ä—è–¥–∫—É –∑ Firebase (–¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞)
window.loadDailyScheduleFromSave = function(username, data) {
    if (!username || !data) return;
    
    if (!window.dailyScheduleState) {
        window.dailyScheduleState = {};
    }
    
    window.dailyScheduleState[username] = data;
    
    // –†–µ–Ω–¥–µ—Ä–∏–º–æ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —Ü–µ –ø–æ—Ç–æ—á–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
    const currentUser = window.currentUser ? window.currentUser() : null;
    if (currentUser && currentUser.username === username) {
        window.renderDailySchedule();
    }
    
    console.log(`‚úÖ –†–æ–∑–ø–æ—Ä—è–¥–æ–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –¥–ª—è ${username}:`, data);
};

console.log('‚úÖ Daily schedule system –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ (–ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ –≤–µ—Ä—Å—ñ—è –∑ –∞–≤—Ç–æ–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º)');
