// ===== MENU SECTION LOGIC WITH PERSONAL MENUS =====

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –º–µ–Ω—é –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
if (typeof window.weeklyMenuState === 'undefined') {
    window.weeklyMenuState = {};
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø–æ—Ä–æ–∂–Ω—å–æ–≥–æ –º–µ–Ω—é
function getEmptyWeekMenu() {
    return {
        '–ü–æ–Ω–µ–¥—ñ–ª–æ–∫': {},
        '–í—ñ–≤—Ç–æ—Ä–æ–∫': {},
        '–°–µ—Ä–µ–¥–∞': {},
        '–ß–µ—Ç–≤–µ—Ä': {},
        "–ü'—è—Ç–Ω–∏—Ü—è": {},
        '–°—É–±–æ—Ç–∞': {},
        '–ù–µ–¥—ñ–ª—è': {}
    };
}

// –û—Ç—Ä–∏–º–∞—Ç–∏ –º–µ–Ω—é –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
function getUserMenu() {
    const currentUser = window.currentUser ? window.currentUser() : null;
    if (!currentUser) return getEmptyWeekMenu();
    
    const username = currentUser.username;
    if (!window.weeklyMenuState[username]) {
        window.weeklyMenuState[username] = getEmptyWeekMenu();
    }
    
    return window.weeklyMenuState[username];
}

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è HTML —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ —Å–µ–∫—Ü—ñ—ó
window.createMenuSection = function() {
    const section = document.getElementById('menu-section');
    
    const currentUser = window.currentUser ? window.currentUser() : null;
    if (!currentUser) {
        section.innerHTML = `
            <div class="container">
                <div class="header">
                    <h1>üçΩÔ∏è –ú–µ–Ω—é –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å</h1>
                    <p>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–∏–π</p>
                </div>
            </div>
        `;
        return;
    }
    
    const roleInfo = window.getTodayRoleInfo ? window.getTodayRoleInfo(currentUser.username) : {};
    const isDev = roleInfo.role === 'Dev';
    
    section.innerHTML = `
        <div class="container">
            <div class="header">
                <h1>üçΩÔ∏è –ú–µ–Ω—é –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å</h1>
                <p>–ü—Ä–æ—Ñ—ñ–ª—å: <strong>${currentUser.avatar} ${currentUser.name}</strong></p>
                ${isDev ? `
                    <p style="color: #4CAF50; font-size: 0.9em; margin-top: 10px;">üíæ –í—Å—ñ –∑–º—ñ–Ω–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –≤ –±–∞–∑—É</p>
                    <p style="color: #d0d0d0; font-size: 0.85em; margin-top: 5px; opacity: 0.8;">–¶–µ –≤–∞—à–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–µ –º–µ–Ω—é - —Ç—ñ–ª—å–∫–∏ –≤–∏ –π–æ–≥–æ –±–∞—á–∏—Ç–µ</p>
                ` : `
                    <p style="color: #ff6b6b; font-size: 0.9em; margin-top: 10px;">üîí –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–µ —Ç—ñ–ª—å–∫–∏ –¥–ª—è Dev</p>
                    <p style="color: #d0d0d0; font-size: 0.85em; margin-top: 5px; opacity: 0.8;">–ü–µ—Ä–µ–≥–ª—è–¥ –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω—é</p>
                `}
            </div>
            
            <div class="content">
                ${isDev ? `
                    <div class="add-menu-section">
                        <h2>‚ûï –î–æ–¥–∞—Ç–∏ —Å—Ç—Ä–∞–≤—É</h2>
                        <form class="add-menu-form" onsubmit="window.addMenuItem(event)">
                            <select id="menuDay" required>
                                <option value="">–û–±–µ—Ä—ñ—Ç—å –¥–µ–Ω—å</option>
                                <option value="–ü–æ–Ω–µ–¥—ñ–ª–æ–∫">–ü–æ–Ω–µ–¥—ñ–ª–æ–∫</option>
                                <option value="–í—ñ–≤—Ç–æ—Ä–æ–∫">–í—ñ–≤—Ç–æ—Ä–æ–∫</option>
                                <option value="–°–µ—Ä–µ–¥–∞">–°–µ—Ä–µ–¥–∞</option>
                                <option value="–ß–µ—Ç–≤–µ—Ä">–ß–µ—Ç–≤–µ—Ä</option>
                                <option value="–ü'—è—Ç–Ω–∏—Ü—è">–ü'—è—Ç–Ω–∏—Ü—è</option>
                                <option value="–°—É–±–æ—Ç–∞">–°—É–±–æ—Ç–∞</option>
                                <option value="–ù–µ–¥—ñ–ª—è">–ù–µ–¥—ñ–ª—è</option>
                            </select>
                            <select id="menuMeal" required>
                                <option value="">–û–±–µ—Ä—ñ—Ç—å –ø—Ä–∏–π–æ–º —ó–∂—ñ</option>
                                <option value="üåÖ –°–Ω—ñ–¥–∞–Ω–æ–∫">üåÖ –°–Ω—ñ–¥–∞–Ω–æ–∫</option>
                                <option value="üåû –û–±—ñ–¥">üåû –û–±—ñ–¥</option>
                                <option value="üåô –í–µ—á–µ—Ä—è">üåô –í–µ—á–µ—Ä—è</option>
                            </select>
                            <input type="text" id="menuDish" placeholder="–ù–∞–∑–≤–∞ —Å—Ç—Ä–∞–≤–∏" required>
                            <button type="submit">‚ûï –î–æ–¥–∞—Ç–∏</button>
                        </form>
                    </div>
                ` : ''}
                
                <div class="days-grid" id="menuGrid"></div>
            </div>
        </div>
    `;
};

// –î–æ–¥–∞—Ç–∏ —Å—Ç—Ä–∞–≤—É –¥–æ –º–µ–Ω—é
window.addMenuItem = function(event) {
    event.preventDefault();
    
    const currentUser = window.currentUser ? window.currentUser() : null;
    if (!currentUser) {
        alert('‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–∏–π!');
        return;
    }
    
    const roleInfo = window.getTodayRoleInfo ? window.getTodayRoleInfo(currentUser.username) : {};
    if (roleInfo.role !== 'Dev') {
        alert('‚ùå –¢—ñ–ª—å–∫–∏ Dev –º–æ–∂–µ —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ –º–µ–Ω—é!');
        return;
    }
    
    const day = document.getElementById('menuDay').value;
    const meal = document.getElementById('menuMeal').value;
    const dish = document.getElementById('menuDish').value.trim();

    if (!day || !meal || !dish) {
        alert('–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –ø–æ–ª—è!');
        return;
    }

    const username = currentUser.username;
    if (!window.weeklyMenuState[username]) {
        window.weeklyMenuState[username] = getEmptyWeekMenu();
    }

    if (!window.weeklyMenuState[username][day]) {
        window.weeklyMenuState[username][day] = {};
    }

    window.weeklyMenuState[username][day][meal] = dish;

    // –û—á–∏—â–∞—î–º–æ —Ñ–æ—Ä–º—É
    document.getElementById('menuDay').value = '';
    document.getElementById('menuMeal').value = '';
    document.getElementById('menuDish').value = '';

    window.renderMenu();
    
    console.log(`‚úÖ –î–æ–¥–∞–Ω–æ —Å—Ç—Ä–∞–≤—É –¥–ª—è ${username}:`, { day, meal, dish });
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ Firebase
    if (typeof window.autoSaveMenu === 'function') {
        window.autoSaveMenu();
    }
    
    // –î–æ–¥–∞—Ç–∫–æ–≤–æ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ –ª–æ–∫–∞–ª—å–Ω–∏–π –∫–µ—à
    if (typeof window.autoSaveToCache === 'function') {
        window.autoSaveToCache();
    }
};

// –í–∏–¥–∞–ª–∏—Ç–∏ —Å—Ç—Ä–∞–≤—É –∑ –º–µ–Ω—é
window.deleteMenuItem = function(day, meal) {
    const currentUser = window.currentUser ? window.currentUser() : null;
    if (!currentUser) {
        alert('‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–∏–π!');
        return;
    }
    
    const roleInfo = window.getTodayRoleInfo ? window.getTodayRoleInfo(currentUser.username) : {};
    if (roleInfo.role !== 'Dev') {
        alert('‚ùå –¢—ñ–ª—å–∫–∏ Dev –º–æ–∂–µ —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ –º–µ–Ω—é!');
        return;
    }
    
    const username = currentUser.username;
    if (!window.weeklyMenuState[username]) return;
    
    if (window.weeklyMenuState[username][day] && window.weeklyMenuState[username][day][meal]) {
        const deletedDish = window.weeklyMenuState[username][day][meal];
        delete window.weeklyMenuState[username][day][meal];
        
        window.renderMenu();
        
        console.log(`üóëÔ∏è –í–∏–¥–∞–ª–µ–Ω–æ —Å—Ç—Ä–∞–≤—É –¥–ª—è ${username}:`, { day, meal, dish: deletedDish });
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ Firebase
        if (typeof window.autoSaveMenu === 'function') {
            window.autoSaveMenu();
        }
        
        // –î–æ–¥–∞—Ç–∫–æ–≤–æ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ –ª–æ–∫–∞–ª—å–Ω–∏–π –∫–µ—à
        if (typeof window.autoSaveToCache === 'function') {
            window.autoSaveToCache();
        }
    }
};

// –ì—Ä—É–ø—É–≤–∞–Ω–Ω—è —Å—Ç—Ä–∞–≤ –ø–æ —Ç–∏–ø—É (—Å–Ω—ñ–¥–∞–Ω–æ–∫, –æ–±—ñ–¥, –≤–µ—á–µ—Ä—è)
function groupMealsByType(dayMeals) {
    const grouped = {};
    for (const [mealType, dish] of Object.entries(dayMeals)) {
        if (!grouped[mealType]) {
            grouped[mealType] = [];
        }
        grouped[mealType].push(dish);
    }
    return grouped;
}

// –†–µ–Ω–¥–µ—Ä –º–µ–Ω—é –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å
window.renderMenu = function() {
    const grid = document.getElementById('menuGrid');
    if (!grid) return;
    
    const currentUser = window.currentUser ? window.currentUser() : null;
    if (!currentUser) {
        grid.innerHTML = '<div class="empty-day">–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–∏–π</div>';
        return;
    }
    
    const menu = getUserMenu();
    const roleInfo = window.getTodayRoleInfo ? window.getTodayRoleInfo(currentUser.username) : {};
    const isDev = roleInfo.role === 'Dev';

    const days = ['–ü–æ–Ω–µ–¥—ñ–ª–æ–∫', '–í—ñ–≤—Ç–æ—Ä–æ–∫', '–°–µ—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä', "–ü'—è—Ç–Ω–∏—Ü—è", '–°—É–±–æ—Ç–∞', '–ù–µ–¥—ñ–ª—è'];
    const dayEmojis = {
        '–ü–æ–Ω–µ–¥—ñ–ª–æ–∫': 'üåô',
        '–í—ñ–≤—Ç–æ—Ä–æ–∫': 'üî•',
        '–°–µ—Ä–µ–¥–∞': '‚≠ê',
        '–ß–µ—Ç–≤–µ—Ä': '‚ö°',
        "–ü'—è—Ç–Ω–∏—Ü—è": 'üéâ',
        '–°—É–±–æ—Ç–∞': 'üåà',
        '–ù–µ–¥—ñ–ª—è': '‚òÄÔ∏è'
    };

    grid.innerHTML = days.map(day => {
        const dayMeals = menu[day] || {};
        const meals = Object.entries(dayMeals);

        return `
            <div class="day-card">
                <div class="day-header">
                    <div class="day-title">${dayEmojis[day]} ${day}</div>
                </div>
                
                ${meals.length > 0 ? `
                    ${Object.entries(groupMealsByType(dayMeals)).map(([mealType, dishes]) => `
                        <div class="meal-group">
                            <div class="meal-title">${mealType}</div>
                            ${dishes.map(dish => `
                                <div class="meal-item">
                                    <span class="meal-name">${dish}</span>
                                    ${isDev ? `<button class="delete-meal-btn" onclick="window.deleteMenuItem('${day}', '${mealType}')">‚úï</button>` : ''}
                                </div>
                            `).join('')}
                        </div>
                    `).join('')}
                ` : `
                    <div class="empty-day">
                        ${isDev ? '–î–æ–¥–∞–π—Ç–µ —Å—Ç—Ä–∞–≤–∏ –¥–ª—è —Ü—å–æ–≥–æ –¥–Ω—è' : '–ú–µ–Ω—é –Ω–µ –∑–∞–ø–æ–≤–Ω–µ–Ω–µ'}
                    </div>
                `}
            </div>
        `;
    }).join('');
    
    console.log(`üìã –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–æ –º–µ–Ω—é –¥–ª—è ${currentUser.username}`);
};

// –ï–∫—Å–ø–æ—Ä—Ç –¥–ª—è Firebase (–ø–æ–≤–µ—Ä—Ç–∞—î –º–µ–Ω—é –¢–Ü–õ–¨–ö–ò –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞)
window.getMenuForSave = function() {
    const currentUser = window.currentUser ? window.currentUser() : null;
    if (!currentUser) return getEmptyWeekMenu();
    
    const username = currentUser.username;
    return window.weeklyMenuState[username] || getEmptyWeekMenu();
};

// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–µ–Ω—é –∑ Firebase (–¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞)
window.loadMenuFromSave = function(username, data) {
    if (!username || !data) return;
    
    if (!window.weeklyMenuState) {
        window.weeklyMenuState = {};
    }
    
    window.weeklyMenuState[username] = data;
    
    // –†–µ–Ω–¥–µ—Ä–∏–º–æ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —Ü–µ –ø–æ—Ç–æ—á–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
    const currentUser = window.currentUser ? window.currentUser() : null;
    if (currentUser && currentUser.username === username) {
        window.renderMenu();
    }
    
    console.log(`‚úÖ –ú–µ–Ω—é –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –¥–ª—è ${username}:`, data);
};

console.log('‚úÖ Menu system –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ (–ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ –≤–µ—Ä—Å—ñ—è –∑ –∞–≤—Ç–æ–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º, Dev only)');
