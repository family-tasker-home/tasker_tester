// ===== RECIPES LOGIC =====

// –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π —Ä–µ—Ü–µ–ø—Ç—ñ–≤
const recipeCategories = [
    { name: '–ú–∞–∫–∞—Ä–æ–Ω–∏', icon: 'üçù', file: 'recepts/macaroni.json' },
    { name: '–†–∏—Å', icon: 'üçö', file: 'recepts/rice.json' },
    { name: '–ì—Ä–µ—á–∫–∞', icon: 'üåæ', file: 'recepts/buckwheat.json' },
    { name: '–ö–∞—Ä—Ç–æ–ø–ª—è', icon: 'ü•î', file: 'recepts/potato.json' },
    { name: '–ü—Ç—ñ—Ç—ñ–º', icon: 'üçù', file: 'recepts/ptitim.json' },
    { name: '–ë—É–ª—å–π–æ–Ω', icon: 'üç≤', file: 'recepts/broth.json' },
    { name: '–ë—É–ª–≥—É—Ä', icon: 'üåæ', file: 'recepts/bulgur.json' }
];

// –ö–µ—à –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏—Ö —Ä–µ—Ü–µ–ø—Ç—ñ–≤
let recipesCache = {};

// –ü–æ—Ç–æ—á–Ω–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è
let currentOpenCategory = null;

// –°—Ç–∞–Ω –ø–æ—à—É–∫—É
let isSearchOpen = false;

// –í—Å—ñ —Ä–µ—Ü–µ–ø—Ç–∏ –¥–ª—è –ø–æ—à—É–∫—É
let allRecipes = [];

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è HTML —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ —Å–µ–∫—Ü—ñ—ó —Ä–µ—Ü–µ–ø—Ç—ñ–≤
window.createRecipesSection = function() {
    const section = document.getElementById('recipes-section');
    
    section.innerHTML = `
        <div class="container">
            <div class="header">
                <h1>üìñ –ö–Ω–∏–≥–∞ —Ä–µ—Ü–µ–ø—Ç—ñ–≤</h1>
                <p>–ó–±—ñ—Ä–∫–∞ —É–ª—é–±–ª–µ–Ω–∏—Ö —Å—Ç—Ä–∞–≤</p>
                <button class="search-toggle-btn" onclick="window.toggleSearch()" title="–ü–æ—à—É–∫ —Ä–µ—Ü–µ–ø—Ç—ñ–≤">
                    üîç
                </button>
            </div>
            
            <!-- –ü–∞–Ω–µ–ª—å –ø–æ—à—É–∫—É -->
            <div class="search-panel" id="searchPanel" style="display: none;">
                <div class="search-header">
                    <h2>üîç –ü–æ—à—É–∫ —Ä–µ—Ü–µ–ø—Ç—ñ–≤</h2>
                    <button class="close-search-btn" onclick="window.closeSearch()">‚úï</button>
                </div>
                <div class="search-input-wrapper">
                    <input 
                        type="text" 
                        id="recipeSearchInput" 
                        class="search-input" 
                        placeholder="–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Å—Ç—Ä–∞–≤–∏..."
                        oninput="window.searchRecipes()"
                    >
                    <button class="clear-search-btn" onclick="window.clearSearchInput()" style="display: none;">‚úï</button>
                </div>
                <div class="search-results" id="searchResults">
                    <div class="empty-search">
                        <svg viewBox="0 0 24 24" fill="currentColor">
                            <path d="M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z"/>
                        </svg>
                        <p>–ü–æ—á–Ω—ñ—Ç—å –≤–≤–æ–¥–∏—Ç–∏ –Ω–∞–∑–≤—É —Å—Ç—Ä–∞–≤–∏</p>
                    </div>
                </div>
            </div>
            
            <div class="content">
                <!-- –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ä–µ—Ü–µ–ø—Ç—ñ–≤ -->
                <div class="recipes-categories">
                    <h2>üóÇÔ∏è –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó</h2>
                    <div class="categories-grid" id="categoriesGrid">
                        <!-- –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó —Å—Ç–≤–æ—Ä—é—é—Ç—å—Å—è –¥–∏–Ω–∞–º—ñ—á–Ω–æ -->
                    </div>
                </div>

                <!-- –°–ø–∏—Å–æ–∫ —Ä–µ—Ü–µ–ø—Ç—ñ–≤ -->
                <div class="recipes-list" id="recipesList" style="display: none;">
                    <!-- –†–µ—Ü–µ–ø—Ç–∏ —Å—Ç–≤–æ—Ä—é—é—Ç—å—Å—è –¥–∏–Ω–∞–º—ñ—á–Ω–æ -->
                </div>

                <!-- –î–µ—Ç–∞–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥ —Ä–µ—Ü–µ–ø—Ç—É -->
                <div class="recipe-detail" id="recipeDetail" style="display: none;">
                    <!-- –î–µ—Ç–∞–ª—ñ —Ä–µ—Ü–µ–ø—Ç—É —Å—Ç–≤–æ—Ä—é—é—Ç—å—Å—è –¥–∏–Ω–∞–º—ñ—á–Ω–æ -->
                </div>
            </div>
        </div>
    `;
    
    // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
    renderCategories();
    
    // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö —Ä–µ—Ü–µ–ø—Ç—ñ–≤ –¥–ª—è –ø–æ—à—É–∫—É
    loadAllRecipesForSearch();
};

// –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
function renderCategories() {
    const grid = document.getElementById('categoriesGrid');
    
    grid.innerHTML = recipeCategories.map(category => `
        <div class="category-card" onclick="window.toggleRecipeCategory('${category.file}', '${category.name}')">
            <div class="category-icon">${category.icon}</div>
            <div class="category-name">${category.name}</div>
        </div>
    `).join('');
}

// –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ä–µ—Ü–µ–ø—Ç—ñ–≤
window.toggleRecipeCategory = function(file, categoryName) {
    // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é
    currentOpenCategory = file;
    window.loadRecipeCategory(file, categoryName);
    
    // –•–æ–≤–∞—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–∞ –ø–æ–∫–∞–∑—É—î–º–æ —Ç—ñ–ª—å–∫–∏ —Ä–µ—Ü–µ–ø—Ç–∏
    document.querySelector('.recipes-categories').style.display = 'none';
    document.querySelector('.header').style.display = 'none';
    document.getElementById('recipesList').style.display = 'block';
    
    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –Ω–∞–≥–æ—Ä—É
    window.scrollTo({ top: 0, behavior: 'smooth' });
};

// –ó–∞–∫—Ä–∏—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ä–µ—Ü–µ–ø—Ç—ñ–≤
function closeRecipesList() {
    const recipesList = document.getElementById('recipesList');
    const recipeDetail = document.getElementById('recipeDetail');
    
    recipeDetail.style.display = 'none';
    recipesList.style.display = 'none';
    
    // –ü–æ–∫–∞–∑—É—î–º–æ –Ω–∞–∑–∞–¥ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫
    document.querySelector('.recipes-categories').style.display = 'block';
    document.querySelector('.header').style.display = 'block';
    
    currentOpenCategory = null;
    renderCategories();
    
    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –Ω–∞–≥–æ—Ä—É
    window.scrollTo({ top: 0, behavior: 'smooth' });
}

// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–µ—Ü–µ–ø—Ç—ñ–≤ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
window.loadRecipeCategory = async function(file, categoryName) {
    const recipesList = document.getElementById('recipesList');
    const recipeDetail = document.getElementById('recipeDetail');
    
    // –°—Ö–æ–≤–∞—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ä–µ—Ü–µ–ø—Ç—É
    recipeDetail.style.display = 'none';
    
    // –ü–æ–∫–∞–∑–∞—Ç–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    recipesList.innerHTML = `
        <div class="loading-state">
            <div class="loading-spinner"></div>
            <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–µ—Ü–µ–ø—Ç—ñ–≤...</p>
        </div>
    `;
    
    try {
        // –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∫–µ—à
        if (recipesCache[file]) {
            renderRecipesList(recipesCache[file], categoryName);
            return;
        }
        
        // –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ —Ñ–∞–π–ª—É
        const response = await fetch(file);
        if (!response.ok) {
            throw new Error('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ä–µ—Ü–µ–ø—Ç–∏');
        }
        
        const data = await response.json();
        recipesCache[file] = data;
        renderRecipesList(data, categoryName);
        
    } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–µ—Ü–µ–ø—Ç—ñ–≤:', error);
        recipesList.innerHTML = `
            <div class="error-state">
                <svg viewBox="0 0 24 24" fill="currentColor">
                    <path d="M13,13H11V7H13M13,17H11V15H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"/>
                </svg>
                <p>–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ä–µ—Ü–µ–ø—Ç–∏</p>
                <button onclick="window.loadRecipeCategory('${file}', '${categoryName}')" class="retry-btn">
                    –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑
                </button>
            </div>
        `;
    }
};

// –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É —Ä–µ—Ü–µ–ø—Ç—ñ–≤
function renderRecipesList(data, categoryName) {
    const recipesList = document.getElementById('recipesList');
    
    recipesList.innerHTML = `
        <button class="back-btn" onclick="closeRecipesList()">
            ‚Üê –ù–∞–∑–∞–¥ –¥–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
        </button>
        <div class="recipes-header">
            <h2>${data.icon} ${data.category}</h2>
            <p class="recipes-count">${data.recipes.length} —Ä–µ—Ü–µ–ø—Ç—ñ–≤</p>
        </div>
        <div class="recipes-grid">
            ${data.recipes.map(recipe => `
                <div class="recipe-card" onclick="window.showRecipeDetail('${data.category}', '${recipe.id}')">
                    <div class="recipe-card-header">
                        <h3>${recipe.name}</h3>
                        <span class="recipe-difficulty ${recipe.difficulty.toLowerCase()}">${recipe.difficulty}</span>
                    </div>
                    <div class="recipe-card-info">
                        <div class="recipe-info-item">
                            <span>‚è±Ô∏è</span>
                            <span>${recipe.time}</span>
                        </div>
                        <div class="recipe-info-item">
                            <span>üë•</span>
                            <span>${recipe.servings} –ø–æ—Ä—Ü—ñ–π</span>
                        </div>
                    </div>
                    <div class="recipe-card-footer">
                        <span>–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ä–µ—Ü–µ–ø—Ç ‚Üí</span>
                    </div>
                </div>
            `).join('')}
        </div>
    `;
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ä–µ—Ü–µ–ø—Ç—É
window.showRecipeDetail = function(categoryName, recipeId) {
    const recipeDetail = document.getElementById('recipeDetail');
    const recipesList = document.getElementById('recipesList');
    
    // –ó–Ω–∞–π—Ç–∏ —Ä–µ—Ü–µ–ø—Ç –≤ –∫–µ—à—ñ
    let recipe = null;
    for (const file in recipesCache) {
        const data = recipesCache[file];
        if (data.category === categoryName) {
            recipe = data.recipes.find(r => r.id === recipeId);
            break;
        }
    }
    
    if (!recipe) {
        console.error('–†–µ—Ü–µ–ø—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        return;
    }
    
    // –•–æ–≤–∞—î–º–æ —Å–ø–∏—Å–æ–∫ —Ä–µ—Ü–µ–ø—Ç—ñ–≤
    recipesList.style.display = 'none';
    
    // –í—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏ –¥–µ—Ç–∞–ª—ñ
    recipeDetail.innerHTML = `
        <div class="recipe-detail-content">
            <button class="back-btn" onclick="window.closeRecipeDetail()">
                ‚Üê –ù–∞–∑–∞–¥ –¥–æ —Å–ø–∏—Å–∫—É
            </button>
            
            <div class="recipe-detail-header">
                <h2>${recipe.name}</h2>
                <div class="recipe-meta">
                    <span class="recipe-difficulty ${recipe.difficulty.toLowerCase()}">${recipe.difficulty}</span>
                    <span class="recipe-time">‚è±Ô∏è ${recipe.time}</span>
                    <span class="recipe-servings">üë• ${recipe.servings} –ø–æ—Ä—Ü—ñ–π</span>
                </div>
            </div>
            
            <div class="recipe-detail-body">
                <div class="recipe-section">
                    <h3>üõí –Ü–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏</h3>
                    <ul class="ingredients-list">
                        ${recipe.ingredients.map(ingredient => `
                            <li>${ingredient}</li>
                        `).join('')}
                    </ul>
                </div>
                
                <div class="recipe-section">
                    <h3>üë®‚Äçüç≥ –ü—Ä–∏–≥–æ—Ç—É–≤–∞–Ω–Ω—è</h3>
                    <ol class="steps-list">
                        ${recipe.steps.map(step => `
                            <li>${step}</li>
                        `).join('')}
                    </ol>
                </div>
            </div>
        </div>
    `;
    
    recipeDetail.style.display = 'block';
    
    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –Ω–∞–≥–æ—Ä—É
    window.scrollTo({ top: 0, behavior: 'smooth' });
};

// –ó–∞–∫—Ä–∏—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ä–µ—Ü–µ–ø—Ç—É
window.closeRecipeDetail = function() {
    const recipeDetail = document.getElementById('recipeDetail');
    const recipesList = document.getElementById('recipesList');
    
    recipeDetail.style.display = 'none';
    recipesList.style.display = 'block';
    
    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –Ω–∞–≥–æ—Ä—É
    window.scrollTo({ top: 0, behavior: 'smooth' });
};

// ===== –§–£–ù–ö–¶–Ü–á –ü–û–®–£–ö–£ =====

// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö —Ä–µ—Ü–µ–ø—Ç—ñ–≤ –¥–ª—è –ø–æ—à—É–∫—É
async function loadAllRecipesForSearch() {
    allRecipes = [];
    
    for (const category of recipeCategories) {
        try {
            const response = await fetch(category.file);
            if (response.ok) {
                const data = await response.json();
                // –î–æ–¥–∞—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –¥–æ –∫–æ–∂–Ω–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç—É
                const recipesWithCategory = data.recipes.map(recipe => ({
                    ...recipe,
                    category: data.category,
                    categoryIcon: data.icon
                }));
                allRecipes = allRecipes.concat(recipesWithCategory);
                recipesCache[category.file] = data;
            }
        } catch (error) {
            console.error(`–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è ${category.file}:`, error);
        }
    }
    
    console.log(`‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${allRecipes.length} —Ä–µ—Ü–µ–ø—Ç—ñ–≤ –¥–ª—è –ø–æ—à—É–∫—É`);
}

// –í—ñ–¥–∫—Ä–∏—Ç–∏/–∑–∞–∫—Ä–∏—Ç–∏ –ø–∞–Ω–µ–ª—å –ø–æ—à—É–∫—É
window.toggleSearch = function() {
    const searchPanel = document.getElementById('searchPanel');
    const searchInput = document.getElementById('recipeSearchInput');
    
    isSearchOpen = !isSearchOpen;
    
    if (isSearchOpen) {
        searchPanel.style.display = 'block';
        searchInput.focus();
    } else {
        searchPanel.style.display = 'none';
        clearSearchInput();
    }
};

// –ó–∞–∫—Ä–∏—Ç–∏ –ø–æ—à—É–∫
window.closeSearch = function() {
    isSearchOpen = false;
    const searchPanel = document.getElementById('searchPanel');
    searchPanel.style.display = 'none';
    clearSearchInput();
};

// –û—á–∏—Å—Ç–∏—Ç–∏ –ø–æ–ª–µ –ø–æ—à—É–∫—É
window.clearSearchInput = function() {
    const searchInput = document.getElementById('recipeSearchInput');
    const clearBtn = document.querySelector('.clear-search-btn');
    const searchResults = document.getElementById('searchResults');
    
    searchInput.value = '';
    clearBtn.style.display = 'none';
    
    searchResults.innerHTML = `
        <div class="empty-search">
            <svg viewBox="0 0 24 24" fill="currentColor">
                <path d="M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z"/>
            </svg>
            <p>–ü–æ—á–Ω—ñ—Ç—å –≤–≤–æ–¥–∏—Ç–∏ –Ω–∞–∑–≤—É —Å—Ç—Ä–∞–≤–∏</p>
        </div>
    `;
};

// –ü–æ—à—É–∫ —Ä–µ—Ü–µ–ø—Ç—ñ–≤
window.searchRecipes = function() {
    const searchInput = document.getElementById('recipeSearchInput');
    const clearBtn = document.querySelector('.clear-search-btn');
    const searchResults = document.getElementById('searchResults');
    const query = searchInput.value.trim().toLowerCase();
    
    // –ü–æ–∫–∞–∑–∞—Ç–∏/—Å—Ö–æ–≤–∞—Ç–∏ –∫–Ω–æ–ø–∫—É –æ—á–∏—â–µ–Ω–Ω—è
    clearBtn.style.display = query ? 'flex' : 'none';
    
    // –Ø–∫—â–æ –∑–∞–ø–∏—Ç –ø–æ—Ä–æ–∂–Ω—ñ–π
    if (!query) {
        searchResults.innerHTML = `
            <div class="empty-search">
                <svg viewBox="0 0 24 24" fill="currentColor">
                    <path d="M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z"/>
                </svg>
                <p>–ü–æ—á–Ω—ñ—Ç—å –≤–≤–æ–¥–∏—Ç–∏ –Ω–∞–∑–≤—É —Å—Ç—Ä–∞–≤–∏</p>
            </div>
        `;
        return;
    }
    
    // –§—ñ–ª—å—Ç—Ä—É—î–º–æ —Ä–µ—Ü–µ–ø—Ç–∏
    const results = allRecipes.filter(recipe => 
        recipe.name.toLowerCase().includes(query)
    );
    
    // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
    if (results.length === 0) {
        searchResults.innerHTML = `
            <div class="no-results">
                <svg viewBox="0 0 24 24" fill="currentColor">
                    <path d="M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z"/>
                </svg>
                <p>–ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–∞ –∑–∞–ø–∏—Ç–æ–º "<strong>${query}</strong>"</p>
                <p class="hint">–°–ø—Ä–æ–±—É–π—Ç–µ —ñ–Ω—à–∏–π –∑–∞–ø–∏—Ç</p>
            </div>
        `;
        return;
    }
    
    // –ü–æ–∫–∞–∑—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
    searchResults.innerHTML = `
        <div class="search-results-header">
            <h3>–ó–Ω–∞–π–¥–µ–Ω–æ: ${results.length} ${getRecipeWord(results.length)}</h3>
        </div>
        <div class="search-results-grid">
            ${results.map(recipe => `
                <div class="search-result-card" onclick="window.showRecipeDetailFromSearch('${recipe.category}', '${recipe.id}')">
                    <div class="search-result-category">
                        <span>${recipe.categoryIcon}</span>
                        <span>${recipe.category}</span>
                    </div>
                    <h4>${highlightText(recipe.name, query)}</h4>
                    <div class="search-result-info">
                        <span>‚è±Ô∏è ${recipe.time}</span>
                        <span class="recipe-difficulty ${recipe.difficulty.toLowerCase()}">${recipe.difficulty}</span>
                    </div>
                </div>
            `).join('')}
        </div>
    `;
};

// –ü—ñ–¥—Å–≤—ñ—Ç–∫–∞ —Ç–µ–∫—Å—Ç—É –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö
function highlightText(text, query) {
    const regex = new RegExp(`(${query})`, 'gi');
    return text.replace(regex, '<mark>$1</mark>');
}

// –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó —Ñ–æ—Ä–º–∏ —Å–ª–æ–≤–∞ "—Ä–µ—Ü–µ–ø—Ç"
function getRecipeWord(count) {
    if (count === 1) return '—Ä–µ—Ü–µ–ø—Ç';
    if (count >= 2 && count <= 4) return '—Ä–µ—Ü–µ–ø—Ç–∏';
    return '—Ä–µ—Ü–µ–ø—Ç—ñ–≤';
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ —Ä–µ—Ü–µ–ø—Ç –∑ –ø–æ—à—É–∫—É
window.showRecipeDetailFromSearch = function(categoryName, recipeId) {
    // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –ø–æ—à—É–∫
    closeSearch();
    
    // –•–æ–≤–∞—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫
    document.querySelector('.recipes-categories').style.display = 'none';
    document.querySelector('.header').style.display = 'none';
    
    // –ü–æ–∫–∞–∑—É—î–º–æ –¥–µ—Ç–∞–ª—ñ —Ä–µ—Ü–µ–ø—Ç—É
    window.showRecipeDetail(categoryName, recipeId);
};
