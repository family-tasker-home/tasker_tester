// ===== SUPPLIES LOGIC =====

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–º—ñ–Ω–Ω–æ—ó
if (typeof window.suppliesStatus === 'undefined') {
    window.suppliesStatus = {};
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –∫–ª—é—á—ñ–≤ –≤—ñ–¥ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–∏—Ö —Å–∏–º–≤–æ–ª—ñ–≤ Firebase
function sanitizeFirebaseKey(key) {
    if (typeof key !== 'string') return key;
    return key.replace(/[.#$/[\]]/g, '_');
}

// –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑ –±–µ–∑–ø–µ—á–Ω–∏–º–∏ –∫–ª—é—á–∞–º–∏ –¥–ª—è Firebase
const suppliesCategories = {
    'meat_fish': {
        display: 'ü•© –ú—è—Å–æ —Ç–∞ —Ä–∏–±–∞',
        items: ['–ö—É—Ä—è—á–µ —Ñ—ñ–ª–µ –∞–±–æ —Å—Ç–µ–≥–Ω–∞', '–°–≤–∏–Ω–∏–Ω–∞','–í—ñ–¥–±–∏–≤–Ω–∞','–ö–æ—Ç–ª–µ—Ç–∏', '–Ü–Ω–¥–∏—á–∫–∞ (—Ñ—ñ–ª–µ)', '–õ–æ—Å–æ—Å—å (—Å–≤—ñ–∂–∏–π –∞–±–æ –∑–∞–º–æ—Ä–æ–∂–µ–Ω–∏–π)', '–•–µ–∫ / –º–∏–Ω—Ç–∞–π (–∑–∞–º–æ—Ä–æ–∂–µ–Ω–∏–π)', '–°–∫—É–º–±—Ä—ñ—è (—Å–≤—ñ–∂–∞ –∞–±–æ —Å–æ–ª–µ–Ω–∞)', '–û—Å–µ–ª–µ–¥–µ—Ü—å (—Ñ—ñ–ª–µ –∞–±–æ —Å–ª–∞–±–æ—Å–æ–ª–µ–Ω–∏–π)', '–ö–æ–Ω—Å–µ—Ä–≤–æ–≤–∞–Ω–∏–π —Ç—É–Ω–µ—Ü—å / —Å–∞—Ä–¥–∏–Ω–∏','–ü–µ–ª—å–º–µ–Ω—ñ (–∑–∞–º–æ—Ä–æ–∂–µ–Ω—ñ)']
    },
    'eggs_dairy': {
        display: 'ü•ö –Ø–π—Ü—è, –º–æ–ª–æ—á–Ω–µ, —Å–∏—Ä',
        items: ['–Ø–π—Ü—è', '–ú–æ–ª–æ–∫–æ (—Å–≤—ñ–∂–µ –∞–±–æ —Å—É—Ö–µ)', '–°–º–µ—Ç–∞–Ω–∞', '–°–∏—Ä –∫–∏—Å–ª–æ–º–æ–ª–æ—á–Ω–∏–π', '–ô–æ–≥—É—Ä—Ç –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–∏–π', '–ú–∞—Å–ª–æ –≤–µ—Ä—à–∫–æ–≤–µ', '–í–µ—Ä—à–∫–∏ –∫—É–ª—ñ–Ω–∞—Ä–Ω—ñ', '–°–∏—Ä —Ç–≤–µ—Ä–¥–∏–π (—Ç–∏–ø—É –≥–∞—É–¥–∞, –º–æ—Ü–∞—Ä–µ–ª–∞)']
    },
    'grains_pasta': {
        display: 'üåæ –ö—Ä—É–ø–∏, –±–æ—Ä–æ—à–Ω–æ, –º–∞–∫–∞—Ä–æ–Ω–∏',
        items: ['–í—ñ–≤—Å—è–Ω–∫–∞', '–ì—Ä–µ—á–∫–∞', '–†–∏—Å', '–ë—É–ª–≥—É—Ä', '–ü—à–æ–Ω–æ', '–ú–∞–Ω–∫–∞', '–ö—É—Å-–∫—É—Å (–¥–æ–¥–∞—Ç–∫–æ–≤–æ, —è–∫—â–æ –ª—é–±–∏—à)', '–ú–∞–∫–∞—Ä–æ–Ω–∏ (—Ä—ñ–∑–Ω–∏—Ö –≤–∏–¥—ñ–≤)','–ü—Ç—ñ—Ç—ñ–º', '–ë–æ—Ä–æ—à–Ω–æ –ø—à–µ–Ω–∏—á–Ω–µ', '–ü–∞–Ω—ñ—Ä—É–≤–∞–ª—å–Ω—ñ —Å—É—Ö–∞—Ä—ñ', '–ö—Ä–æ—Ö–º–∞–ª—å (–¥–ª—è —Å–∏—Ä–Ω–∏–∫—ñ–≤, —Å–æ—É—Å—ñ–≤)']
    },
    'vegetables': {
        display: 'üßÖ –û–≤–æ—á—ñ (—Å–≤—ñ–∂—ñ / –∑–∞–º–æ—Ä–æ–∂–µ–Ω—ñ)',
        items: ['–ö–∞—Ä—Ç–æ–ø–ª—è', '–ú–æ—Ä–∫–≤–∞', '–¶–∏–±—É–ª—è', '–ë—É—Ä—è–∫', '–ö–∞–ø—É—Å—Ç–∞ (—Å–≤—ñ–∂–∞ –∞–±–æ –∫–≤–∞—à–µ–Ω–∞)', '–ü–æ–º—ñ–¥–æ—Ä–∏', '–û–≥—ñ—Ä–∫–∏', '–ë–æ–ª–≥–∞—Ä—Å—å–∫–∏–π –ø–µ—Ä–µ—Ü—å', '–ß–∞—Å–Ω–∏–∫', '–ó–µ–ª–µ–Ω—å (–∫—Ä—ñ–ø, –ø–µ—Ç—Ä—É—à–∫–∞, —Ü–∏–±—É–ª—è –∑–µ–ª–µ–Ω–∞)', '–ó–∞–º–æ—Ä–æ–∂–µ–Ω–∞ –æ–≤–æ—á–µ–≤–∞ —Å—É–º—ñ—à', '–ö–∞–±–∞—á–∫–∏ / –±–∞–∫–ª–∞–∂–∞–Ω–∏ (–∑–∞ –±–∞–∂–∞–Ω–Ω—è–º)']
    },
    'fruits_nuts': {
        display: 'üçè –§—Ä—É–∫—Ç–∏, –≥–æ—Ä—ñ—Ö–∏, —Å–æ–ª–æ–¥–æ—â—ñ',
        items: ['–Ø–±–ª—É–∫–∞', '–ë–∞–Ω–∞–Ω–∏', '–ì—Ä—É—à—ñ', '–°–µ–∑–æ–Ω–Ω—ñ —è–≥–æ–¥–∏ (—Å–≤—ñ–∂—ñ –∞–±–æ –∑–∞–º–æ—Ä–æ–∂–µ–Ω—ñ)', '–ì–æ—Ä—ñ—Ö–∏ (–≤–æ–ª–æ—Å—å–∫—ñ, –º–∏–≥–¥–∞–ª—å, –∫–µ—à\'—é)', '–°—É—Ö–æ—Ñ—Ä—É–∫—Ç–∏ (–∫—É—Ä–∞–≥–∞, —Ä–æ–¥–∑–∏–Ω–∫–∏, —á–æ—Ä–Ω–æ—Å–ª–∏–≤)', '–ú–µ–¥', '–í–∞—Ä–µ–Ω–Ω—è', '–®–æ–∫–æ–ª–∞–¥ (—á–æ—Ä–Ω–∏–π –∞–±–æ –º–æ–ª–æ—á–Ω–∏–π ‚Äî –¥–ª—è –º–ª–∏–Ω—Ü—ñ–≤, –¥–µ—Å–µ—Ä—Ç—ñ–≤)']
    },
    'spices_oils': {
        display: 'üßÇ –°–ø–µ—Ü—ñ—ó, –æ–ª—ñ—ó, —Å–æ—É—Å–∏',
        items: ['–°—ñ–ª—å', '–ü–µ—Ä–µ—Ü—å —á–æ—Ä–Ω–∏–π (–º–µ–ª–µ–Ω–∏–π —ñ –≥–æ—Ä–æ—à–∫–æ–º)', '–ü–∞–ø—Ä–∏–∫–∞', '–ö—É—Ä–∫—É–º–∞', '–õ–∞–≤—Ä–æ–≤–∏–π –ª–∏—Å—Ç', '–ë–∞–∑–∏–ª—ñ–∫, –æ—Ä–µ–≥–∞–Ω–æ, —Ä–æ–∑–º–∞—Ä–∏–Ω', '–ü—Ä–∏–ø—Ä–∞–≤–∞ –¥–æ —Ä–∏–±–∏', '–ü—Ä–∏–ø—Ä–∞–≤–∞ –¥–æ –∫–∞—Ä—Ç–æ–ø–ª—ñ', '–ü—Ä–∏–ø—Ä–∞–≤–∞ –¥–æ –º\'—è—Å–∞', '–†–æ—Å–ª–∏–Ω–Ω–∞ –æ–ª—ñ—è (—Å–æ–Ω—è—à–Ω–∏–∫–æ–≤–∞ / –æ–ª–∏–≤–∫–æ–≤–∞)', '–°–æ—î–≤–∏–π —Å–æ—É—Å', '–ö–µ—Ç—á—É–ø / —Ç–æ–º–∞—Ç–Ω–∞ –ø–∞—Å—Ç–∞', '–ú–∞–π–æ–Ω–µ–∑', '–ì—ñ—Ä—á–∏—Ü—è', '–û—Ü–µ—Ç (—è–±–ª—É—á–Ω–∏–π –∞–±–æ –∑–≤–∏—á–∞–π–Ω–∏–π)']
    },
    'bread_bakery': {
        display: 'ü•ñ –•–ª—ñ–±, –≤–∏–ø—ñ—á–∫–∞, —Å–Ω–µ–∫–∏',
        items: ['–•–ª—ñ–± –ø—à–µ–Ω–∏—á–Ω–∏–π', '–•–ª—ñ–± –∂–∏—Ç–Ω—ñ–π', '–ë–∞—Ç–æ–Ω–∏ / –±—É–ª–æ—á–∫–∏', '–°—É—Ö–∞—Ä–∏–∫–∏', '–ì–∞–ª–µ—Ç–∏ –∞–±–æ –∫—Ä–µ–∫–µ—Ä–∏', '–õ–∞–≤–∞—à / —Ç–æ—Ä—Ç–∏–ª—å—ó']
    },
    'beverages': {
        display: 'üç∂ –ù–∞–ø–æ—ó',
        items: ['–í–æ–¥–∞ –ø–∏—Ç–Ω–∞ (–±—É—Ç–∏–ª—å–æ–≤–∞–Ω–∞ –∞–±–æ —Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–∞)', '–ß–∞–π —á–æ—Ä–Ω–∏–π', '–ß–∞–π –∑–µ–ª–µ–Ω–∏–π', '–ö–∞–≤–∞ –º–µ–ª–µ–Ω–∞ / —Ä–æ–∑—á–∏–Ω–Ω–∞', '–ö–∞–∫–∞–æ / –≥–∞—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥', '–°–æ–∫–∏', '–ö–æ–º–ø–æ—Ç–∏']
    },
    'canned_goods': {
        display: 'üßÉ –ö–æ–Ω—Å–µ—Ä–≤–∏ —Ç–∞ –¥–æ–≤–≥–æ—Ç—Ä–∏–≤–∞–ª—ñ –ø—Ä–æ–¥—É–∫—Ç–∏',
        items: ['–ö–æ–Ω—Å–µ—Ä–≤–æ–≤–∞–Ω–∏–π –≥–æ—Ä–æ—à–æ–∫', '–ö—É–∫—É—Ä—É–¥–∑–∞', '–ö–≤–∞—Å–æ–ª—è –≤ –±–∞–Ω–∫–∞—Ö', '–¢–æ–º–∞—Ç–Ω–∞ –ø–∞—Å—Ç–∞', '–û–ª–∏–≤–∫–∏ / –º–∞—Å–ª–∏–Ω–∏', '–ö–æ–Ω—Å–µ—Ä–≤–æ–≤–∞–Ω—ñ –≥—Ä–∏–±–∏', '–¢—É—à–æ–Ω–∫–∞ (–Ω–∞ –µ–∫—Å—Ç—Ä–µ–Ω–∏–π –≤–∏–ø–∞–¥–æ–∫)']
    },
    'baking_supplies': {
        display: 'üçØ –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø—Ä–æ–¥—É–∫—Ç–∏ –¥–ª—è –≤–∏–ø—ñ—á–∫–∏ / –¥–µ—Å–µ—Ä—Ç—ñ–≤',
        items: ['–¶—É–∫–æ—Ä', '–í–∞–Ω—ñ–ª—å–Ω–∏–π —Ü—É–∫–æ—Ä', '–†–æ–∑–ø—É—à—É–≤–∞—á —Ç—ñ—Å—Ç–∞', '–ö–∞–∫–∞–æ', '–ú–µ–¥–æ–≤—ñ –∫–æ—Ä–∂—ñ / –ø–µ—á–∏–≤–æ (–¥–ª—è —à–≤–∏–¥–∫–∏—Ö –¥–µ—Å–µ—Ä—Ç—ñ–≤)', '–°—É—Ö–µ –º–æ–ª–æ–∫–æ (–∑–∞–ø–∞—Å –¥–ª—è –≤–∏–ø—ñ—á–∫–∏)']
    }
};

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è HTML —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ —Å–µ–∫—Ü—ñ—ó
window.createSuppliesSection = function() {
    const section = document.getElementById('supplies-section');
    section.innerHTML = `
        <div class="container">
            <div class="header">
                <h1>üì¶ –ó–∞–ø–∞—Å–∏</h1>
                <p>–í—ñ–¥—Å—Ç–µ–∂—É–π—Ç–µ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ñ–≤ –≤–¥–æ–º–∞</p>
            </div>
            
            <div class="content">
                <div class="supplies-legend">
                    <div class="legend-item">
                        <span class="legend-icon">üü¢</span>
                        <span>–Ñ –≤–¥–æ–º–∞</span>
                    </div>
                    <div class="legend-item">
                        <span class="legend-icon">üü°</span>
                        <span>–ú–∞–ª–æ –∑–∞–ª–∏—à–∏–ª–æ—Å—å</span>
                    </div>
                    <div class="legend-item">
                        <span class="legend-icon">üî¥</span>
                        <span>–ü–æ—Ç—Ä—ñ–±–Ω–æ –∫—É–ø–∏—Ç–∏</span>
                    </div>
                </div>

                <div id="suppliesList" class="supplies-categories">
                    <!-- –ó–∞–ø–æ–≤–Ω—é—î—Ç—å—Å—è –¥–∏–Ω–∞–º—ñ—á–Ω–æ -->
                </div>

                <div class="action-buttons">
                    <button class="download-btn" onclick="window.addToShoppingList()">
                        <span>üõí</span>
                        <span>–î–æ–¥–∞—Ç–∏ –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫</span>
                    </button>
                    <button class="save-btn" onclick="window.saveSuppliestoFirebase()">
                        <span>‚òÅÔ∏è</span>
                        <span>–ó–±–µ—Ä–µ–≥—Ç–∏ –≤ —Ö–º–∞—Ä—É</span>
                    </button>
                    <button class="load-btn" onclick="window.loadSuppliesFromFirebase()">
                        <span>‚òÅÔ∏è</span>
                        <span>–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ —Ö–º–∞—Ä–∏</span>
                    </button>
                </div>
            </div>
        </div>
    `;
};

window.initializeSupplies = function() {
    if (!window.suppliesStatus) {
        window.suppliesStatus = {};
    }
    
    Object.keys(suppliesCategories).forEach(categoryKey => {
        if (!window.suppliesStatus[categoryKey]) {
            window.suppliesStatus[categoryKey] = {};
        }
        suppliesCategories[categoryKey].items.forEach(item => {
            if (window.suppliesStatus[categoryKey][item] === undefined) {
                window.suppliesStatus[categoryKey][item] = null;
            }
        });
    });
};

window.setSupplyStatus = function(categoryKey, item, status) {
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
    if (!window.suppliesStatus[categoryKey]) {
        window.suppliesStatus[categoryKey] = {};
    }
    
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É
    if (!window.suppliesStatus[categoryKey][item]) {
        window.suppliesStatus[categoryKey][item] = null;
    }
    
    if (window.suppliesStatus[categoryKey][item] === status) {
        window.suppliesStatus[categoryKey][item] = null;
    } else {
        window.suppliesStatus[categoryKey][item] = status;
    }
    window.renderSupplies();
    if (typeof window.autoSaveToCache === 'function') window.autoSaveToCache();
};

window.renderSupplies = function() {
    const container = document.getElementById('suppliesList');
    
    if (!container) return;
    
    container.innerHTML = Object.keys(suppliesCategories).map(categoryKey => {
        const category = suppliesCategories[categoryKey];
        const items = category.items;
        
        const itemsHtml = items.map(item => {
            // –ë–µ–∑–ø–µ—á–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö
            let status = null;
            if (window.suppliesStatus && window.suppliesStatus[categoryKey]) {
                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —è–∫ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –∫–ª—é—á, —Ç–∞–∫ —ñ –æ—á–∏—â–µ–Ω–∏–π
                const originalKey = item;
                const sanitizedKey = sanitizeFirebaseKey(item);
                
                if (window.suppliesStatus[categoryKey][originalKey]) {
                    status = window.suppliesStatus[categoryKey][originalKey];
                } else if (window.suppliesStatus[categoryKey][sanitizedKey]) {
                    status = window.suppliesStatus[categoryKey][sanitizedKey];
                }
            }
            
            const escapedItem = item.replace(/'/g, "\\'");
            
            return `
                <div class="supply-item">
                    <span class="supply-name">${item}</span>
                    <div class="supply-status-buttons">
                        <button class="supply-status-btn ${status === 'available' ? 'active' : ''}" onclick="window.setSupplyStatus('${categoryKey}', '${escapedItem}', 'available')" title="–Ñ –≤–¥–æ–º–∞">üü¢</button>
                        <button class="supply-status-btn ${status === 'low' ? 'active' : ''}" onclick="window.setSupplyStatus('${categoryKey}', '${escapedItem}', 'low')" title="–ú–∞–ª–æ –∑–∞–ª–∏—à–∏–ª–æ—Å—å">üü°</button>
                        <button class="supply-status-btn ${status === 'needed' ? 'active' : ''}" onclick="window.setSupplyStatus('${categoryKey}', '${escapedItem}', 'needed')" title="–ü–æ—Ç—Ä—ñ–±–Ω–æ –∫—É–ø–∏—Ç–∏">üî¥</button>
                    </div>
                </div>
            `;
        }).join('');
        
        return `
            <div class="supply-category">
                <div class="supply-category-header"><h3>${category.display}</h3></div>
                <div class="supply-items">${itemsHtml}</div>
            </div>
        `;
    }).join('');
};

window.addToShoppingList = function() {
    let itemsToAdd = [];
    
    Object.keys(window.suppliesStatus).forEach(categoryKey => {
        Object.keys(window.suppliesStatus[categoryKey]).forEach(item => {
            const status = window.suppliesStatus[categoryKey][item];
            if (status === 'low' || status === 'needed') {
                // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—É –Ω–∞–∑–≤—É —Ç–æ–≤–∞—Ä—É –≤ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
                const originalItem = suppliesCategories[categoryKey]?.items.find(original => 
                    original === item || sanitizeFirebaseKey(original) === item
                ) || item;
                itemsToAdd.push({ name: originalItem, categoryKey: categoryKey });
            }
        });
    });
    
    if (itemsToAdd.length === 0) {
        alert('–ù–µ–º–∞—î —Ç–æ–≤–∞—Ä—ñ–≤ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ —Å–ø–∏—Å–∫—É –ø–æ–∫—É–ø–æ–∫!\n\n–ü–æ–∑–Ω–∞—á—Ç–µ —Ç–æ–≤–∞—Ä–∏ –∂–æ–≤—Ç–∏–º (üü°) –∞–±–æ —á–µ—Ä–≤–æ–Ω–∏–º (üî¥) –∫–æ–ª—å–æ—Ä–æ–º.');
        return;
    }
    
    // –ú–∞–ø—ñ–Ω–≥ –±–µ–∑–ø–µ—á–Ω–∏—Ö –∫–ª—é—á—ñ–≤ –¥–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π —Å–ø–∏—Å–∫—É –ø–æ–∫—É–ø–æ–∫
    const categoryMapping = {
        'meat_fish': 'üçñ –ú—è—Å–æ —Ç–∞ —Ä–∏–±–∞',
        'eggs_dairy': 'ü•õ –ú–æ–ª–æ—á–Ω—ñ –ø—Ä–æ–¥—É–∫—Ç–∏',
        'grains_pasta': 'üçù –ë–∞–∫–∞–ª—ñ—è',
        'vegetables': 'ü•ó –û–≤–æ—á—ñ —Ç–∞ —Ñ—Ä—É–∫—Ç–∏',
        'fruits_nuts': 'ü•ó –û–≤–æ—á—ñ —Ç–∞ —Ñ—Ä—É–∫—Ç–∏',
        'spices_oils': 'üçù –ë–∞–∫–∞–ª—ñ—è',
        'bread_bakery': 'ü•ñ –•–ª—ñ–± —Ç–∞ –≤–∏–ø—ñ—á–∫–∞',
        'beverages': 'ü•§ –ù–∞–ø–æ—ó',
        'canned_goods': 'üçù –ë–∞–∫–∞–ª—ñ—è',
        'baking_supplies': 'üçù –ë–∞–∫–∞–ª—ñ—è'
    };
    
    if (typeof window.shoppingList !== 'undefined') {
        itemsToAdd.forEach(item => {
            const shopCategory = categoryMapping[item.categoryKey] || 'üì¶ –Ü–Ω—à–µ';
            
            if (!window.shoppingList[shopCategory]) window.shoppingList[shopCategory] = [];
            
            const exists = window.shoppingList[shopCategory].some(shopItem => 
                shopItem.name.toLowerCase() === item.name.toLowerCase()
            );
            
            if (!exists) {
                window.shoppingList[shopCategory].push({
                    id: Date.now() + Math.random(),
                    name: item.name,
                    checked: false
                });
            }
        });
        
        if (typeof window.renderList === 'function') window.renderList();
        if (typeof window.autoSaveToCache === 'function') window.autoSaveToCache();
        
        alert(`–î–æ–¥–∞–Ω–æ ${itemsToAdd.length} —Ç–æ–≤–∞—Ä—ñ–≤ –¥–æ —Å–ø–∏—Å–∫—É –ø–æ–∫—É–ø–æ–∫!`);
    } else {
        alert('–ü–æ–º–∏–ª–∫–∞: —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ!');
    }
};
