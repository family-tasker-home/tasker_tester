// ===== LOGIN SYSTEM =====
// –í–∏–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å—ñ—è –∑ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏–º —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è–º —á–∞—Ç–æ–º

// –ü–æ—Ç–æ—á–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
let currentUser = null;
let selectedUsername = null;

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
window.initAuthSystem = async function() {
    console.log('üîê –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó...');
    
    // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø—Ä–æ—Ñ—ñ–ª—ñ
    await window.loadProfiles();
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
    const savedUser = localStorage.getItem('halloween_user');
    if (savedUser) {
        try {
            currentUser = JSON.parse(savedUser);
            console.log('‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π –∑ –∫–µ—à—É:', currentUser.name);
            showAppContent();
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error);
            localStorage.removeItem('halloween_user');
            showLoginForm();
        }
    } else {
        showLoginForm();
    }
};

// –ü–æ–∫–∞–∑–∞—Ç–∏ —Ñ–æ—Ä–º—É –≤—Ö–æ–¥—É
function showLoginForm() {
    const app = document.getElementById('app');
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞
    if (typeof USERS === 'undefined' || Object.keys(USERS).length === 0) {
        app.innerHTML = `
            <div class="login-overlay" id="loginOverlay">
                <div class="login-container">
                    <div class="login-header">
                        <h1>üéÉ</h1>
                        <h2>–ö—É—Ö–æ–Ω–Ω–∏–π –ü–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫</h2>
                        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>
                    </div>
                    <div class="error-message">
                        –ü–æ–º–∏–ª–∫–∞: –ø—Ä–æ—Ñ—ñ–ª—ñ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ. –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Å—Ç–æ—Ä—ñ–Ω–∫—É.
                    </div>
                </div>
            </div>
        `;
        return;
    }
    
    // –ì–µ–Ω–µ—Ä—É—î–º–æ —Å–ø–∏—Å–æ–∫ –∞–∫–∞—É–Ω—Ç—ñ–≤
    let accountsHTML = '';
    for (const [username, user] of Object.entries(USERS)) {
        const avatar = user.avatar || 'üë§';
        
        // –û—Ç—Ä–∏–º—É—î–º–æ —Ä–æ–ª—å –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ
        const roleInfo = window.getTodayRoleInfo(username);
        const roleEmoji = {
            'Dev': 'üîß',
            '–ö—É—Ö–Ω—è': 'üç≥',
            '–í–∞–Ω–Ω–∞': 'üöø',
            '–ö–ª–∞–¥–æ–≤–∫–∞': 'üì¶',
            'Viewer': 'üëÄ'
        };
        
        const roleText = `${roleEmoji[roleInfo.role] || 'üëÄ'} ${roleInfo.role}`;
        const dayInfo = roleInfo.role !== 'Dev' ? ` (${roleInfo.dayName})` : '';
        
        accountsHTML += `
            <div class="account-card" data-role="${roleInfo.role}" onclick="window.selectAccount('${username}')">
                <div class="account-avatar">${avatar}</div>
                <div class="account-info">
                    <p class="account-name">${user.name}</p>
                    <p class="account-role">${roleText}${dayInfo}</p>
                </div>
                <div class="account-arrow">‚Üí</div>
            </div>
        `;
    }
    
    app.innerHTML = `
        <div class="login-overlay" id="loginOverlay">
            <div class="login-container">
                <div class="login-header">
                    <h1>üéÉ</h1>
                    <h2>–ö—É—Ö–æ–Ω–Ω–∏–π –ü–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫</h2>
                    <p>–í–∏–±–µ—Ä—ñ—Ç—å –∞–∫–∞—É–Ω—Ç</p>
                </div>
                
                <div id="accountSelection" class="account-selection">
                    <div class="account-list">
                        ${accountsHTML}
                    </div>
                </div>
                
                <div id="passwordForm" class="password-form">
                    <div class="selected-account" id="selectedAccountInfo"></div>
                    
                    <form class="login-form" onsubmit="window.loginWithPassword(event)">
                        <div class="form-group">
                            <label for="password">–ü–∞—Ä–æ–ª—å:</label>
                            <input type="password" id="password" name="password" 
                                   placeholder="–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å" required autofocus>
                            <small style="color: #7f8c8d; font-size: 0.8em; margin-top: 5px; display: block;">
                                –î–ª—è –∞–∫–∞—É–Ω—Ç–∞ "–ê–Ω–æ–Ω—ñ–º" –ø–∞—Ä–æ–ª—å –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω
                            </small>
                        </div>
                        
                        <div class="login-buttons">
                            <button type="button" class="btn btn-secondary" onclick="window.backToAccounts()">
                                <span>‚Üê</span>
                                <span>–ù–∞–∑–∞–¥</span>
                            </button>
                            <button type="submit" class="btn btn-primary">
                                <span>üîë</span>
                                <span>–£–≤—ñ–π—Ç–∏</span>
                            </button>
                        </div>
                    </form>
                </div>
                
                <div id="errorMessage" class="error-message" style="display: none;"></div>
            </div>
        </div>
    `;
}

// –í–∏–±—ñ—Ä –∞–∫–∞—É–Ω—Ç–∞
window.selectAccount = function(username) {
    selectedUsername = username;
    const user = USERS[username];
    
    // –Ø–∫—â–æ —Ü–µ –ê–Ω–æ–Ω—ñ–º - –≤—Ö–æ–¥–∏–º–æ –±–µ–∑ –ø–∞—Ä–æ–ª—è
    if (username === '–ê–Ω–æ–Ω—ñ–º') {
        const roleInfo = window.getTodayRoleInfo(username);
        
        currentUser = {
            name: user.name,
            username: username,
            role: roleInfo.role,
            promptFile: user.promptFile,
            avatar: user.avatar,
            canModify: roleInfo.canModify,
            canSave: roleInfo.canSave
        };
        
        localStorage.setItem('halloween_user', JSON.stringify(currentUser));
        showAppContent();
        setTimeout(() => {
            showMessage(`–í—ñ—Ç–∞—î–º–æ, ${user.name}!`, 'success');
        }, 100);
        return;
    }
    
    // –î–ª—è —ñ–Ω—à–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –ø–æ–∫–∞–∑—É—î–º–æ —Ñ–æ—Ä–º—É –ø–∞—Ä–æ–ª—è
    const avatar = user.avatar || 'üë§';
    const roleInfo = window.getTodayRoleInfo(username);
    
    const roleEmoji = {
        'Dev': 'üîß',
        '–ö—É—Ö–Ω—è': 'üç≥',
        '–í–∞–Ω–Ω–∞': 'üöø',
        '–ö–ª–∞–¥–æ–≤–∫–∞': 'üì¶',
        'Viewer': 'üëÄ'
    };
    
    const roleText = `${roleEmoji[roleInfo.role] || 'üëÄ'} ${roleInfo.role}`;
    const dayInfo = roleInfo.role !== 'Dev' ? ` (${roleInfo.dayName})` : '';
    
    // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤–∏–±—Ä–∞–Ω–∏–π –∞–∫–∞—É–Ω—Ç
    document.getElementById('selectedAccountInfo').innerHTML = `
        <div class="account-avatar">${avatar}</div>
        <div class="selected-account-info">
            <p class="selected-account-name">${user.name}</p>
            <p class="selected-account-role">${roleText}${dayInfo}</p>
        </div>
    `;
    
    // –ü–æ–∫–∞–∑—É—î–º–æ —Ñ–æ—Ä–º—É –ø–∞—Ä–æ–ª—è
    document.getElementById('accountSelection').style.display = 'none';
    document.getElementById('passwordForm').classList.add('active');
    document.getElementById('errorMessage').style.display = 'none';
    
    // –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –ø–∞—Ä–æ–ª—è
    setTimeout(() => {
        document.getElementById('password').focus();
    }, 100);
};

// –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≤–∏–±–æ—Ä—É –∞–∫–∞—É–Ω—Ç—ñ–≤
window.backToAccounts = function() {
    selectedUsername = null;
    document.getElementById('accountSelection').style.display = 'block';
    document.getElementById('passwordForm').classList.remove('active');
    document.getElementById('password').value = '';
    document.getElementById('errorMessage').style.display = 'none';
};

// –í—Ö—ñ–¥ –∑ –ø–∞—Ä–æ–ª–µ–º
window.loginWithPassword = function(event) {
    event.preventDefault();
    
    if (!selectedUsername) {
        showMessage('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–±–µ—Ä—ñ—Ç—å –∞–∫–∞—É–Ω—Ç', 'error');
        return;
    }
    
    const password = document.getElementById('password').value;
    const user = USERS[selectedUsername];
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–∞—Ä–æ–ª—å
    if (user && user.password === password) {
        const roleInfo = window.getTodayRoleInfo(selectedUsername);
        
        currentUser = {
            name: user.name,
            username: selectedUsername,
            role: roleInfo.role,
            promptFile: user.promptFile,
            avatar: user.avatar,
            canModify: roleInfo.canModify,
            canSave: roleInfo.canSave,
            dayName: roleInfo.dayName
        };
        
        localStorage.setItem('halloween_user', JSON.stringify(currentUser));
        showAppContent();
        setTimeout(() => {
            const roleEmoji = {
                'Dev': 'üîß',
                '–ö—É—Ö–Ω—è': 'üç≥',
                '–í–∞–Ω–Ω–∞': 'üöø',
                '–ö–ª–∞–¥–æ–≤–∫–∞': 'üì¶',
                'Viewer': 'üëÄ'
            };
            showMessage(`–í—ñ—Ç–∞—î–º–æ, ${user.name}! üéâ\n\n–í–∞—à–∞ —Ä–æ–ª—å —Å—å–æ–≥–æ–¥–Ω—ñ: ${roleEmoji[roleInfo.role]} ${roleInfo.role}`, 'success');
        }, 100);
    } else {
        showMessage('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ø–∞—Ä–æ–ª—å', 'error');
        document.getElementById('password').value = '';
        document.getElementById('password').focus();
    }
};

// –ü–æ–∫–∞–∑–∞—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç –¥–æ–¥–∞—Ç–∫—É
function showAppContent() {
    const app = document.getElementById('app');
    app.innerHTML = `
        <div class="app-content visible">
            <div id="mainAppContent"></div>
        </div>
    `;
    
    // –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –∑ general.js
    if (typeof window.createMainApp === 'function') {
        window.createMainApp(currentUser, USERS);
    } else {
        console.error('‚ùå –§—É–Ω–∫—Ü—ñ—è createMainApp –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!');
    }
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –≤—Å—ñ –¥–∞–Ω—ñ –∑ Firebase
    if (currentUser && currentUser.username) {
        setTimeout(() => {
            // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            if (typeof window.autoLoadAllDataOnLogin === 'function') {
                window.autoLoadAllDataOnLogin(currentUser.username).then(() => {
                    console.log('‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ Firebase');
                    
                    // –û–Ω–æ–≤–ª—é—î–º–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∏
                    if (typeof window.renderDailySchedule === 'function') window.renderDailySchedule();
                    if (typeof window.renderTasks === 'function') window.renderTasks();
                    if (typeof window.renderMenu === 'function') window.renderMenu();
                });
            }
            
            // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å–ø—ñ–ª—å–Ω—ñ –¥–∞–Ω—ñ (–∑–∞–ø–∞—Å–∏ —Ç–∞ —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫)
            if (typeof window.autoLoadSharedDataOnLogin === 'function') {
                window.autoLoadSharedDataOnLogin().then(() => {
                    console.log('‚úÖ –°–ø—ñ–ª—å–Ω—ñ –¥–∞–Ω—ñ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ Firebase');
                });
            }
        }, 1500);
    }
}

// –í–∏—Ö—ñ–¥ –∑ —Å–∏—Å—Ç–µ–º–∏ (–ë–ï–ó –æ—á–∏—â–µ–Ω–Ω—è —á–∞—Ç—É)
window.logout = function() {
    if (confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–π—Ç–∏?')) {
        const previousUser = currentUser ? currentUser.username : null;
        
        currentUser = null;
        selectedUsername = null;
        localStorage.removeItem('halloween_user');
        
        // –ù–ï –æ—á–∏—â–∞—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é —á–∞—Ç—É - –≤–æ–Ω–∞ –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        console.log(`üëã –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${previousUser} –≤–∏–π—à–æ–≤ (—ñ—Å—Ç–æ—Ä—ñ—è —á–∞—Ç—É –∑–±–µ—Ä–µ–∂–µ–Ω–∞)`);
        
        showLoginForm();
        setTimeout(() => {
            showMessage('–í–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∏–π—à–ª–∏ –∑ —Å–∏—Å—Ç–µ–º–∏', 'success');
        }, 100);
    }
};

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –∑–º—ñ–Ω—É –¥–∞–Ω–∏—Ö
function canModifyData() {
    if (!currentUser) return false;
    const role = window.getCurrentRole(currentUser.username);
    return role !== "Viewer";
}

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ Firebase
function canSaveToFirebase() {
    if (!currentUser) return false;
    const role = window.getCurrentRole(currentUser.username);
    return role !== "Viewer";
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
function showMessage(message, type = 'error') {
    const errorDiv = document.getElementById('errorMessage');
    if (errorDiv) {
        errorDiv.textContent = message;
        errorDiv.className = `${type}-message`;
        errorDiv.style.display = 'block';
        
        setTimeout(() => {
            errorDiv.style.display = 'none';
        }, 5000);
    }
}

// –ï–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü—ñ–π –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
window.canModifyData = canModifyData;
window.canSaveToFirebase = canSaveToFirebase;
window.currentUser = () => currentUser;

console.log('‚úÖ Login system –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ (–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ —á–∞—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ)');
